/**
 * Comprehensive test suite for Malayalam Voice Navigation System
 * Tests natural language understanding for agricultural applications
 */

import { routeFromTranscript } from "../lib/voiceNavigation";

interface TestCase {
  query: string;
  expectedTargetId: string;
  expectedSubAction?: string;
  description: string;
  category: string;
}

const malayalamTestCases: TestCase[] = [
  // Disease/Plant Problem Detection
  {
    query: "‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥™‡¥Ø‡¥±‡¥ø‡¥®‡µç ‡¥µ‡µÜ‡¥≥‡µç‡¥≥‡¥ï‡µç‡¥ï‡¥æ‡¥∂‡µÅ ‡¥µ‡¥®‡µç‡¥®‡¥ø‡¥ü‡µç‡¥ü‡µÅ‡¥£‡µç‡¥ü‡µç",
    expectedTargetId: "diagnose",
    description: "Pest problem on beans",
    category: "Disease Detection",
  },
  {
    query: "‡¥§‡¥ï‡µç‡¥ï‡¥æ‡¥≥‡¥ø‡¥Ø‡¥ø‡µΩ ‡¥™‡µÅ‡¥≥‡µç‡¥≥‡¥ø‡¥ï‡µæ ‡¥ï‡¥æ‡¥£‡µÅ‡¥®‡µç‡¥®‡µÅ",
    expectedTargetId: "diagnose",
    description: "Spots on tomato",
    category: "Disease Detection",
  },
  {
    query: "‡¥ö‡µÜ‡¥ü‡¥ø‡¥Ø‡µÅ‡¥ü‡µÜ ‡¥á‡¥≤‡¥ï‡µæ ‡¥Æ‡¥û‡µç‡¥û‡¥Ø‡¥æ‡¥Ø‡¥ø ‡¥µ‡¥∞‡µÅ‡¥®‡µç‡¥®‡µÅ",
    expectedTargetId: "diagnose",
    description: "Yellowing leaves",
    category: "Disease Detection",
  },
  {
    query: "‡¥®‡µÜ‡¥≤‡µç‡¥≤‡¥ø‡¥®‡µç ‡¥á‡¥≤‡¥™‡µç‡¥™‡µÅ‡¥≥‡µç‡¥≥‡¥ø ‡¥∞‡µã‡¥ó‡¥Ç ‡¥µ‡¥®‡µç‡¥®‡µÅ",
    expectedTargetId: "diagnose",
    description: "Leaf spot disease on rice",
    category: "Disease Detection",
  },
  {
    query: "‡¥µ‡¥æ‡¥¥‡¥Ø‡¥ø‡µΩ ‡¥™‡µÅ‡¥¥‡µÅ ‡¥ï‡¥Ø‡¥±‡¥ø",
    expectedTargetId: "diagnose",
    description: "Worm infestation on banana",
    category: "Disease Detection",
  },

  // Market Prices
  {
    query: "‡¥á‡¥®‡µç‡¥®‡µç ‡¥µ‡µÄ‡¥ü‡µç‡¥ü‡¥ø‡µΩ ‡¥™‡¥ö‡µç‡¥ö‡¥ï‡µç‡¥ï‡¥±‡¥ø ‡¥µ‡¥ø‡¥±‡µç‡¥±‡¥æ‡µΩ ‡¥®‡¥≤‡µç‡¥≤ ‡¥µ‡¥ø‡¥≤‡¥ï‡¥ø‡¥ü‡µç‡¥ü‡µÅ‡¥Æ‡µã?",
    expectedTargetId: "market",
    description: "Selling vegetables today for good price",
    category: "Market Prices",
  },
  {
    query: "‡¥§‡¥ï‡µç‡¥ï‡¥æ‡¥≥‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥§‡µç‡¥∞ ‡¥µ‡¥ø‡¥≤ ‡¥ï‡¥ø‡¥ü‡µç‡¥ü‡µÅ‡¥Ç ‡¥á‡¥®‡µç‡¥®‡µç",
    expectedTargetId: "market",
    description: "Today's tomato price",
    category: "Market Prices",
  },
  {
    query: "‡¥ï‡µÉ‡¥∑‡¥ø‡¥ö‡µç‡¥ö‡¥®‡µç‡¥§‡¥Ø‡¥ø‡¥≤‡µÜ ‡¥µ‡¥ø‡¥≤ ‡¥é‡¥§‡µç‡¥∞‡¥Ø‡¥æ‡¥£‡µç",
    expectedTargetId: "market",
    description: "Market prices inquiry",
    category: "Market Prices",
  },
  {
    query: "‡¥®‡µÜ‡¥≤‡µç‡¥≤‡µç ‡¥µ‡¥ø‡¥±‡µç‡¥±‡¥æ‡µΩ ‡¥é‡¥§‡µç‡¥∞ ‡¥ï‡¥ø‡¥ü‡µç‡¥ü‡µÅ‡¥Ç",
    expectedTargetId: "market",
    description: "Rice selling price",
    category: "Market Prices",
  },

  // Weather Queries
  {
    query: "‡¥á‡¥®‡µç‡¥®‡¥§‡µç‡¥§‡µÜ ‡¥ï‡¥æ‡¥≤‡¥æ‡¥µ‡¥∏‡µç‡¥• ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ‡¥Ø‡¥æ‡¥£‡µç?",
    expectedTargetId: "weather",
    expectedSubAction: "current",
    description: "Today's weather",
    category: "Weather",
  },
  {
    query: "‡¥®‡¥æ‡¥≥‡µÜ ‡¥Æ‡¥¥ ‡¥â‡¥£‡µç‡¥ü‡µã",
    expectedTargetId: "weather",
    expectedSubAction: "forecast",
    description: "Tomorrow's rain forecast",
    category: "Weather",
  },
  {
    query: "‡¥ï‡¥æ‡¥≤‡¥æ‡¥µ‡¥∏‡µç‡¥•‡¥æ ‡¥™‡µç‡¥∞‡¥µ‡¥ö‡¥®‡¥Ç ‡¥ï‡¥æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
    expectedTargetId: "weather",
    expectedSubAction: "forecast",
    description: "Weather forecast",
    category: "Weather",
  },
  {
    query: "‡¥ï‡µä‡¥ü‡µÅ‡¥ô‡µç‡¥ï‡¥æ‡¥±‡µç‡¥±‡µç ‡¥µ‡¥∞‡µÅ‡¥Æ‡µã",
    expectedTargetId: "weather",
    expectedSubAction: "alerts",
    description: "Storm alerts",
    category: "Weather",
  },

  // Expenses
  {
    query: "‡¥é‡¥§‡µç‡¥∞ ‡¥ö‡µÜ‡¥≤‡¥µ‡¥æ‡¥Ø‡¥ø ‡¥à ‡¥Æ‡¥æ‡¥∏‡¥Ç",
    expectedTargetId: "expense",
    description: "This month's expenses",
    category: "Expenses",
  },
  {
    query: "‡¥µ‡¥≥‡¥§‡µç‡¥§‡¥ø‡¥®‡µç ‡¥ï‡µä‡¥ü‡µÅ‡¥§‡µç‡¥§ ‡¥™‡¥£‡¥Ç ‡¥é‡¥§‡µç‡¥∞",
    expectedTargetId: "expense",
    description: "Money spent on fertilizer",
    category: "Expenses",
  },
  {
    query: "‡¥ï‡µÉ‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥§‡µç‡¥∞ ‡¥ö‡µÜ‡¥≤‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡¥ø",
    expectedTargetId: "expense",
    description: "Total farming expenses",
    category: "Expenses",
  },

  // Crop Recommendations
  {
    query: "‡¥µ‡¥ø‡¥≥ ‡¥∂‡µÅ‡¥™‡¥æ‡µº‡¥∂‡¥ï‡µæ ‡¥ï‡¥æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
    expectedTargetId: "twin",
    expectedSubAction: "recommendations",
    description: "Show crop recommendations",
    category: "Recommendations",
  },
  {
    query: "‡¥à ‡¥∏‡µÄ‡¥∏‡¥£‡¥ø‡µΩ ‡¥é‡¥®‡µç‡¥§‡µç ‡¥µ‡¥ø‡¥≥ ‡¥®‡¥ü‡¥æ‡¥Ç",
    expectedTargetId: "twin",
    expectedSubAction: "recommendations",
    description: "What crop to plant this season",
    category: "Recommendations",
  },
  {
    query: "‡¥é‡¥®‡µç‡¥±‡µÜ ‡¥™‡µç‡¥∞‡¥¶‡µá‡¥∂‡¥§‡µç‡¥§‡¥ø‡¥®‡µç ‡¥è‡¥§‡µç ‡¥µ‡¥ø‡¥≥‡¥Ø‡¥æ‡¥£‡µç ‡¥®‡¥≤‡µç‡¥≤‡¥§‡µç",
    expectedTargetId: "twin",
    expectedSubAction: "recommendations",
    description: "Best crop for my region",
    category: "Recommendations",
  },

  // Knowledge/Learning
  {
    query: "‡¥ï‡µÄ‡¥ü‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥®‡¥ø‡¥Ø‡¥®‡µç‡¥§‡µç‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥Ç",
    expectedTargetId: "knowledge",
    description: "How to control pests",
    category: "Knowledge",
  },
  {
    query: "‡¥µ‡µÄ‡¥ü‡µç‡¥ü‡¥ø‡¥≤‡µÜ ‡¥™‡¥∞‡¥ø‡¥π‡¥æ‡¥∞‡¥ô‡µç‡¥ô‡µæ",
    expectedTargetId: "knowledge",
    description: "Home remedies",
    category: "Knowledge",
  },
  {
    query: "‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡¥æ‡¥Ç",
    expectedTargetId: "knowledge",
    description: "How to farm",
    category: "Knowledge",
  },
  {
    query: "‡¥Æ‡¥£‡µç‡¥£‡µç ‡¥™‡¥∞‡¥ø‡¥∂‡µã‡¥ß‡¥® ‡¥µ‡µÄ‡¥ü‡µç‡¥ü‡¥ø‡µΩ",
    expectedTargetId: "knowledge",
    description: "Soil testing at home",
    category: "Knowledge",
  },

  // Forum/Community
  {
    query: "‡¥ï‡¥Æ‡µç‡¥Ø‡µÇ‡¥£‡¥ø‡¥±‡µç‡¥±‡¥ø‡¥Ø‡µã‡¥ü‡µç ‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
    expectedTargetId: "forum",
    description: "Ask community",
    category: "Forum",
  },
  {
    query: "‡¥ï‡µº‡¥∑‡¥ï ‡¥ö‡µº‡¥ö‡µç‡¥ö",
    expectedTargetId: "forum",
    description: "Farmer discussion",
    category: "Forum",
  },
  {
    query: "‡¥Æ‡¥±‡µç‡¥±‡µÅ ‡¥ï‡µº‡¥∑‡¥ï‡¥∞‡µã‡¥ü‡µç ‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
    expectedTargetId: "forum",
    description: "Ask other farmers",
    category: "Forum",
  },

  // Shopping/Buy
  {
    query: "‡¥µ‡¥ø‡¥§‡µç‡¥§‡µç ‡¥µ‡¥æ‡¥ô‡µç‡¥ô‡µÅ‡¥ï",
    expectedTargetId: "buy",
    description: "Buy seeds",
    category: "Shopping",
  },
  {
    query: "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥æ‡¥Æ‡¥ó‡µç‡¥∞‡¥ø‡¥ï‡µæ ‡¥ì‡µº‡¥°‡µº ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
    expectedTargetId: "buy",
    description: "Order farming supplies",
    category: "Shopping",
  },
  {
    query: "‡¥µ‡¥≥‡¥Ç ‡¥µ‡¥æ‡¥ô‡µç‡¥ô‡¥æ‡µª",
    expectedTargetId: "buy",
    description: "Buy fertilizer",
    category: "Shopping",
  },

  // Pest Scanning
  {
    query: "‡¥ï‡µÄ‡¥ü‡¥Ç ‡¥∏‡µç‡¥ï‡¥æ‡µª ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
    expectedTargetId: "scan",
    description: "Scan pest",
    category: "Scanning",
  },
  {
    query: "‡¥ï‡µç‡¥Ø‡¥æ‡¥Æ‡¥± ‡¥ï‡µä‡¥£‡µç‡¥ü‡µç ‡¥™‡µç‡¥∞‡¥æ‡¥£‡¥ø ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡µÅ‡¥ï",
    expectedTargetId: "scan",
    description: "Detect insect with camera",
    category: "Scanning",
  },
  {
    query: "‡¥é‡¥®‡µç‡¥§‡µç ‡¥ï‡µÄ‡¥ü‡¥Æ‡¥æ‡¥£‡µç ‡¥á‡¥§‡µç",
    expectedTargetId: "scan",
    description: "What pest is this",
    category: "Scanning",
  },

  // Navigation
  {
    query: "‡¥™‡µç‡¥∞‡µä‡¥´‡µà‡µΩ ‡¥ï‡¥æ‡¥£‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
    expectedTargetId: "profile",
    description: "Show profile",
    category: "Navigation",
  },
  {
    query: "‡¥π‡µã‡¥Æ‡¥ø‡¥≤‡µá‡¥ï‡µç‡¥ï‡µç ‡¥™‡µã‡¥ï‡¥æ‡¥Ç",
    expectedTargetId: "home",
    description: "Go to home",
    category: "Navigation",
  },
  {
    query: "‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ",
    expectedTargetId: "news",
    description: "News",
    category: "Navigation",
  },

  // News
  {
    query: "‡¥ï‡¥æ‡µº‡¥∑‡¥ø‡¥ï ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ",
    expectedTargetId: "news",
    description: "Agriculture news",
    category: "News",
  },
  {
    query: "‡¥á‡¥®‡µç‡¥®‡¥§‡µç‡¥§‡µÜ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥µ‡¥æ‡µº‡¥§‡µç‡¥§‡¥ï‡µæ",
    expectedTargetId: "news",
    description: "Today's farming news",
    category: "News",
  },

  // Planning
  {
    query: "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥™‡¥¶‡µç‡¥ß‡¥§‡¥ø",
    expectedTargetId: "planner",
    description: "Farming plan",
    category: "Planning",
  },
  {
    query: "‡¥µ‡¥ø‡¥≥‡¥Ø‡µÅ‡¥ü‡µÜ ‡¥∑‡µÜ‡¥°‡µç‡¥Ø‡µÇ‡µæ",
    expectedTargetId: "planner",
    description: "Crop schedule",
    category: "Planning",
  },
];

/**
 * Run comprehensive Malayalam voice navigation tests
 */
export async function runMalayalamVoiceTests(): Promise<void> {
  console.log("üß™ Running Malayalam Voice Navigation Tests...\n");

  let totalTests = malayalamTestCases.length;
  let passedTests = 0;
  let failedTests = 0;

  const results: {
    [category: string]: { passed: number; failed: number; total: number };
  } = {};

  for (const testCase of malayalamTestCases) {
    try {
      // Set language to Malayalam for context
      const result = await routeFromTranscript(testCase.query, "malayalam");

      let passed = false;
      let reason = "";

      if (result.targetId === testCase.expectedTargetId) {
        if (testCase.expectedSubAction) {
          if (result.subAction === testCase.expectedSubAction) {
            passed = true;
          } else {
            reason = `Expected subAction: ${testCase.expectedSubAction}, got: ${result.subAction}`;
          }
        } else {
          passed = true;
        }
      } else {
        reason = `Expected targetId: ${testCase.expectedTargetId}, got: ${result.targetId}`;
      }

      // Update category results
      if (!results[testCase.category]) {
        results[testCase.category] = { passed: 0, failed: 0, total: 0 };
      }
      results[testCase.category].total++;

      if (passed) {
        passedTests++;
        results[testCase.category].passed++;
        console.log(
          `‚úÖ PASS: "${testCase.query}" ‚Üí ${testCase.expectedTargetId}${testCase.expectedSubAction ? `/${testCase.expectedSubAction}` : ""}`
        );
      } else {
        failedTests++;
        results[testCase.category].failed++;
        console.log(
          `‚ùå FAIL: "${testCase.query}" ‚Üí Expected: ${testCase.expectedTargetId}${testCase.expectedSubAction ? `/${testCase.expectedSubAction}` : ""}, Got: ${result.targetId}${result.subAction ? `/${result.subAction}` : ""}`
        );
        console.log(`   Reason: ${reason}`);
      }
    } catch (error) {
      failedTests++;
      if (!results[testCase.category]) {
        results[testCase.category] = { passed: 0, failed: 0, total: 0 };
      }
      results[testCase.category].failed++;
      results[testCase.category].total++;
      console.log(`‚ùå ERROR: "${testCase.query}" ‚Üí ${error}`);
    }
  }

  // Print summary by category
  console.log("\nüìä TEST RESULTS BY CATEGORY:");
  console.log("=".repeat(50));

  Object.entries(results).forEach(([category, stats]) => {
    const successRate = ((stats.passed / stats.total) * 100).toFixed(1);
    console.log(
      `${category}: ${stats.passed}/${stats.total} (${successRate}%) ‚úÖ${stats.passed} ‚ùå${stats.failed}`
    );
  });

  console.log("\nüéØ OVERALL TEST SUMMARY:");
  console.log("=".repeat(50));
  console.log(`Total Tests: ${totalTests}`);
  console.log(`Passed: ${passedTests} ‚úÖ`);
  console.log(`Failed: ${failedTests} ‚ùå`);
  console.log(
    `Success Rate: ${((passedTests / totalTests) * 100).toFixed(1)}%`
  );

  if (passedTests === totalTests) {
    console.log("\nüéâ All Malayalam voice navigation tests passed!");
  } else {
    console.log(
      "\n‚ö†Ô∏è  Some tests failed. Check the implementation for improvements."
    );
  }
}

// Example usage for testing individual queries
export async function testMalayalamQuery(
  query: string,
  language: string = "malayalam"
): Promise<void> {
  console.log(`\nüß™ Testing: "${query}"`);
  console.log(`Language: ${language}`);

  try {
    const result = await routeFromTranscript(query, language);
    console.log("üìç Result:", {
      targetId: result.targetId,
      subAction: result.subAction || "none",
      confidence: result.confidence || "unknown",
      action: result.action || "navigate",
    });
  } catch (error) {
    console.error("‚ùå Error:", error);
  }
}

// Run tests if called directly
if (require.main === module) {
  runMalayalamVoiceTests().catch(console.error);
}
